#! /bin/bash

# remove old files
rm bs.o bc.o gbooter

# link bs.o and bc.o into a binary executable without header
echo Compiling assembly...
as86 -o bs.o bs.s	# assemble bs.s into bs.o
echo Done
echo Compiling c...
bcc -c -ansi bc.c	# comple bc.c into bc.o
echo Done
echo linking .o files...
ld86 -d -o gbooter bs.o bc.o /usr/lib/bcc/libc.a
echo Done

# dump booter to sector 0 of a FD

dd if=gbooter of=vdisk bs=16 count=27 conv=notrunc
dd if=gbooter of=vdisk bs=512 seek=1  conv=notrunc
#dd if=gbooter of=mtximage bs=512 count=1 conv=notrunc

# run the VM
qemu -hda vdisk -smp 8 -m 512M -serial mon:stdio 
#qemu -fda mtximage -no-fd-bootchk